#
# Test script to connect mlocal_1 and mlocal_2 with l2_lookup
#

import os
import time

# add worker threads on a core and pause it
bess.add_worker(0,24)
bess.pause_all()

# initialize port0 and assign it to a dpdk port
port0::PMDPort(port_id=0)

# create vports and atach it to the containers (created externally)
v_mlocal_1 = VPort(ifname='v_mlocal_1', docker='mlocal_1', mac_addr='02:00:00:00:11:01', ip_addrs=['10.20.21.11/24'])
ans = raw_input("press enter after verifying interface: ")

v_mlocal_2 = VPort(ifname='v_mlocal_2', docker='mlocal_2', mac_addr='02:00:00:00:11:02', ip_addrs=['10.20.21.12/24'])
ans = raw_input("press enter after verifying interface: ")

print("Connection succesful")

# simple flows with l2_lookup

pML1_in::PortInc(port=v_mlocal_1)
pML1_out::PortOut(port=v_mlocal_1)
pML2_in::PortInc(port=v_mlocal_2)
pML2_out::PortOut(port=v_mlocal_2)

fib::L2Forward()
fib.add(entries=[{'addr':'02:00:00:00:11:01', 'gate':0}])
fib.add(entries=[{'addr':'02:00:00:00:11:02', 'gate':1}])
fib.add(entries=[{'addr':'ff:ff:ff:ff:ff:ff', 'gate':2}])

repl::Replicate(gates=[0,1])
#repl.set_gates(gates=range(2))
repl:0 -> pML1_out
repl:1 -> pML2_out

pML1_in -> fib
pML2_in -> fib

fib:0 -> pML1_out
fib:1 -> pML2_out
fib:2 -> repl

bess.resume_all()

# wait for user command to exit
usercmd = "dontexit"
while (usercmd != "exit"):
     usercmd = raw_input("After test complete type 'exit': ")

bess.pause_all()
bess.reset_all()
